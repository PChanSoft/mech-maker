{"version":3,"sources":["components/Mechs.js","App.js","reportWebVitals.js","index.js"],"names":["Mech","mech","selectMech","deleteMech","modelName","console","log","headName","torsoName","armsName","legsName","onClick","id","head","form","name","defense","headDefense","vision","Mechs","mechURL","useState","mechs","setMechs","getMech","a","axios","get","res","data","error","message","useEffect","setForm","handleSubmit","e","preventDefault","createMech","post","messaage","selectedMech","setSelectedMech","patch","mechId","delete","map","className","onChange","target","value","handleChange","onSubmit","type","min","max","handleEditChange","handleEditSubmit","defaultValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fc05e59.chunk.js","sourcesContent":["import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport '../index.css'\r\nfunction Mechs() {\r\n\r\n\r\nconst mechURL='https://mech-maker.herokuapp.com/'\r\n\r\n// const mechURL='http://localhost:8080/'\r\n  const [mechs,setMechs] = useState(null);\r\n  async function getMech(){\r\n    try{\r\n      const res = await axios.get(mechURL+'mechs');\r\n      setMechs(res.data);\r\n    }catch(e){\r\n      console.error(e,e.message);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getMech();\r\n  }, [])\r\n\r\n  const [form, setForm] = useState(null);\r\n\r\n  function handleChange(e){\r\n    const {name,value} = e.target;\r\n    setForm({...form,[name]:value});\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    createMech();\r\n  }\r\n\r\n  async function createMech(){\r\n    try{\r\n      const res = await axios.post(mechURL+'mechs', form);\r\n      const headRes= await axios.post(mechURL+'heads',head(form));\r\n      setMechs([...mechs, res.data]);\r\n    }catch(e){\r\n      console.error(e,e.messaage);\r\n    }\r\n  }\r\n\r\n  const [selectedMech, setSelectedMech] = useState(null);\r\n\r\n  function selectMech(mech){\r\n    setSelectedMech(mech)\r\n  }\r\n\r\n  function handleEditChange(e){\r\n    const {name,value} = e.target;\r\n    setSelectedMech({...selectedMech, [name]: value});\r\n  }\r\n\r\n  async function handleEditSubmit(e){\r\n    e.preventDefault();\r\n    try{\r\n      const res = await axios.patch(mechURL+'mechs', selectedMech);\r\n      console.log(res.data);\r\n      getMech();\r\n    }catch(e) {\r\n      console.error(e,e.message);\r\n    }\r\n  }\r\n  async function deleteMech(mechId){\r\n    try{\r\n      const res = await axios.delete(mechURL+'mechs/'+mechId);\r\n      getMech();\r\n    }catch(e){\r\n      console.error(e,e.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {mechs && mechs.map( mech => <Mech mech={ mech } selectMech={selectMech} deleteMech={ deleteMech } />)}\r\n      <div> Mech Maker</div>\r\n      <form className=\"mechForm\" onChange={(e) => handleChange(e)}\r\n      onSubmit= {(e) => handleSubmit(e)}>\r\n        <label>\r\n          Mech Name:\r\n          <input type=\"text\" name=\"modelName\" />\r\n        </label>\r\n        <div className=\"headBox\">\r\n        <label>\r\n          Head Name:\r\n          <input type=\"text\" name=\"headName\" />\r\n        </label>\r\n        <label>Head Defense:\r\n          <input type=\"number\" name=\"headDefense\" min=\"1\" max=\"100\"/>\r\n        </label>\r\n        <label>Head Vision:</label>\r\n          <input type=\"number\" name=\"vision\" min=\"1\" max=\"100\"/>\r\n        </div>\r\n        <div className=\"torsoBox\">\r\n        <label>\r\n          Torso Name:\r\n          <input type=\"text\" name=\"torsoName\" />\r\n        </label>\r\n        <label>Torso Defense:</label>\r\n        <input type=\"number\" name=\"torsoDefense\" min=\"1\" max=\"100\"/>\r\n        <label>Torso Cooling:</label>\r\n        <input type=\"number\" name=\"cooling\" min=\"1\" max=\"100\"/>\r\n        </div>\r\n        <div className=\"armsBox\">\r\n        <label>\r\n          Arms Name:\r\n          <input type=\"text\" name=\"armsName\" />\r\n        </label>\r\n        </div>\r\n        <div className=\"legsBox\">\r\n        <label>\r\n          Legs Name:\r\n          <input type=\"text\" name=\"legsName\" />\r\n        </label>\r\n        </div>\r\n        <input type=\"submit\" value=\"Make Mech\" />\r\n      </form>\r\n      {selectedMech && <form\r\n      onChange={(e)=>handleEditChange(e)}\r\n      onSubmit={(e)=>handleEditSubmit(e)}>\r\n        <label>\r\n          Mech Name:\r\n          <input type=\"text\" name=\"modelName\" defaultValue={selectedMech.modelName} />\r\n        </label>\r\n        <label>\r\n          Head Name:\r\n          <input type=\"text\" name=\"headName\" defaultValue={selectedMech.headName} />\r\n        </label>\r\n        <label>\r\n          Torso Name:\r\n          <input type=\"text\" name=\"torsoName\" defaultValue={selectedMech.torsoName} />\r\n        </label>\r\n        <label>\r\n          Arms Name:\r\n          <input type=\"text\" name=\"armsName\" defaultValue={selectedMech.armsName} />\r\n        </label>\r\n        <label>\r\n          Legs Name:\r\n          <input type=\"text\" name=\"legsName\" defaultValue={selectedMech.legsName} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Modify Mech\" />\r\n        </form>\r\n        }\r\n\r\n    </div>\r\n  );\r\n}\r\nfunction Mech({ mech, selectMech, deleteMech}){\r\n  return (\r\n    <div>\r\n      <h3>{mech.modelName}{console.log(mech)}</h3>\r\n      <h6>Contains the following Parts</h6>\r\n      <ul>\r\n        <li>Head: {mech.headName}</li>\r\n        <li>Torso: {mech.torsoName}</li>\r\n        <li>Arms: {mech.armsName}</li>\r\n        <li>Legs: {mech.legsName}</li>\r\n      </ul>\r\n      <button onClick={() => selectMech(mech)} >Modify Mech</button>\r\n      <button onClick={() => deleteMech(mech.id)}>Remove Mech</button>\r\n    </div>\r\n  )\r\n}\r\nfunction head(form){\r\n  let filter={\r\n    name:form.headName,\r\n    defense:form.headDefense,\r\n    vision:form.vision\r\n  }\r\n  return filter;\r\n}\r\nfunction torso(form){\r\n  let filter={\r\n    name:form.torsoName,\r\n    defense:form.torsoDefense,\r\n    cooling:form.cooling\r\n  }\r\n  return filter;\r\n}\r\n// function arms(form){\r\n//   let filter={\r\n//     name:form.armsName,\r\n//     defense:form.armsDefense,\r\n//     strength:form.strength\r\n//   }\r\n//   return filter;\r\n// }\r\n// function legs(form){\r\n//   let filter={\r\n//     name:form.legsName,\r\n//     defense:form.legsDefense,\r\n//     speed:form.speed\r\n//   }\r\n//   return filter;\r\n// }\r\nexport default Mechs;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Mechs from './components/Mechs';\r\nimport '../src/index.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Mechs />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}