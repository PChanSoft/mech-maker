{"version":3,"sources":["components/Mechs.js","App.js","reportWebVitals.js","index.js"],"names":["Mech","mech","selectMech","deleteMech","modelName","console","log","headName","torsoName","armsName","legsName","onClick","id","Mechs","mechURL","useState","mechs","setMechs","getMech","a","axios","get","res","data","error","message","useEffect","form","setForm","handleSubmit","e","preventDefault","createMech","post","messaage","selectedMech","setSelectedMech","patch","mechId","delete","map","className","onChange","target","name","value","handleChange","onSubmit","type","handleEditChange","handleEditSubmit","defaultValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5253c398.chunk.js","sourcesContent":["import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport '../index.css'\r\nfunction Mechs() {\r\n// const mechURL='https://mech-maker.herokuapp.com/mechs'\r\nconst mechURL='http://localhost:8080/mechs'\r\n  const [mechs,setMechs] = useState(null);\r\n  async function getMech(){\r\n    try{\r\n      const res = await axios.get(mechURL);\r\n      setMechs(res.data);\r\n    }catch(e){\r\n      console.error(e,e.message);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getMech();\r\n  }, [])\r\n\r\n  const [form, setForm] = useState(null);\r\n\r\n  function handleChange(e){\r\n    const {name,value} = e.target;\r\n    setForm({...form,[name]:value});\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    createMech();\r\n  }\r\n\r\n  async function createMech(){\r\n    try{\r\n      const res = await axios.post(mechURL, form);\r\n      setMechs([...mechs, res.data]);\r\n    }catch(e){\r\n      console.error(e,e.messaage);\r\n    }\r\n  }\r\n\r\n  const [selectedMech, setSelectedMech] = useState(null);\r\n\r\n  function selectMech(mech){\r\n    setSelectedMech(mech)\r\n  }\r\n\r\n  function handleEditChange(e){\r\n    const {name,value} = e.target;\r\n    setSelectedMech({...selectedMech, [name]: value});\r\n  }\r\n\r\n  async function handleEditSubmit(e){\r\n    e.preventDefault();\r\n    try{\r\n      const res = await axios.patch(mechURL, selectedMech);\r\n      console.log(res.data);\r\n      getMech();\r\n    }catch(e) {\r\n      console.error(e,e.message);\r\n    }\r\n  }\r\n  async function deleteMech(mechId){\r\n    try{\r\n      const res = await axios.delete(mechURL+'/'+mechId);\r\n      getMech();\r\n    }catch(e){\r\n      console.error(e,e.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {mechs && mechs.map( mech => <Mech mech={ mech } selectMech={selectMech} deleteMech={ deleteMech } />)}\r\n      <div> Mech Maker</div>\r\n      <form className=\"mechForm\" onChange={(e) => handleChange(e)}\r\n      onSubmit= {(e) => handleSubmit(e)}>\r\n        <label>\r\n          Mech Name:\r\n          <input type=\"text\" name=\"modelName\" />\r\n        </label>\r\n        <label>\r\n          Head Name:\r\n          <input type=\"text\" name=\"headName\" />\r\n        </label>\r\n        <label>\r\n          Torso Name:\r\n          <input type=\"text\" name=\"torsoName\" />\r\n        </label>\r\n        <label>\r\n          Arms Name:\r\n          <input type=\"text\" name=\"armsName\" />\r\n        </label>\r\n        <label>\r\n          Legs Name:\r\n          <input type=\"text\" name=\"legsName\" />\r\n        </label>\r\n        <input type=\"submit\" value=\"Make Mech\" />\r\n      </form>\r\n      {selectedMech && <form\r\n      onChange={(e)=>handleEditChange(e)}\r\n      onSubmit={(e)=>handleEditSubmit(e)}>\r\n        <label>\r\n          Mech Name:\r\n          <input type=\"text\" name=\"modelName\" defaultValue={selectedMech.modelName} />\r\n        </label>\r\n        <label>\r\n          Head Name:\r\n          <input type=\"text\" name=\"headName\" defaultValue={selectedMech.headName} />\r\n        </label>\r\n        <label>\r\n          Torso Name:\r\n          <input type=\"text\" name=\"torsoName\" defaultValue={selectedMech.torsoName} />\r\n        </label>\r\n        <label>\r\n          Arms Name:\r\n          <input type=\"text\" name=\"armsName\" defaultValue={selectedMech.armsName} />\r\n        </label>\r\n        <label>\r\n          Legs Name:\r\n          <input type=\"text\" name=\"legsName\" defaultValue={selectedMech.legsName} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Modify Mech\" />\r\n        </form>\r\n        }\r\n\r\n    </div>\r\n  );\r\n}\r\nfunction Mech({ mech, selectMech, deleteMech}){\r\n  return (\r\n    <div>\r\n      <h3>{mech.modelName}{console.log(mech)}</h3>\r\n      <h6>Contains the following Parts</h6>\r\n      <ul>\r\n        <li>{mech.headName}</li>\r\n        <li>{mech.torsoName}</li>\r\n        <li>{mech.armsName}</li>\r\n        <li>{mech.legsName}</li>\r\n      </ul>\r\n      <button onClick={() => selectMech(mech)} >Modify Mech</button>\r\n      <button onClick={() => deleteMech(mech.id)}>Remove Mech</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mechs;\r\n","import React, { useEffect, useState } from 'react';\nimport Mechs from './components/Mechs';\nimport '../src/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Mechs />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}